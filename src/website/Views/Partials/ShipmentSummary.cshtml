@inherits Merchello.Web.Mvc.MerchelloViewPage<IShipment>
@using Merchello.Core.Models


<div class="row">
    <div class="col-lg-6">
        @RenderAddress(Model.GetDestinationAddress(), "Shipping Destination")
    </div>
    <div class="col-lg-6">
        @RenderAddress(Model.GetOriginAddress(), "Origin (The warehouse)")
    </div>
</div>

<h4>Items in the shipment</h4>
<table class="table">
    <thead>
        <tr>
            <th>Product</th>
            <th>Sku</th>
            <th>Quantity</th>
            <th>Unit Weight</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Sku</td>
                <td>@item.Quantity</td>
                <td>@item.ExtendedData.GetWeightValue()</td>
            </tr>
        }
    </tbody>
</table>



@helper RenderAddress(IAddress address, string title)
{
    <h4>@title</h4>
    <address>
      <strong>@address.Name</strong><br>
      @address.Address1<br>
        @if (!string.IsNullOrEmpty(address.Address2))
        {
        @address.Address2
        }
        @if (!string.IsNullOrEmpty(address.Region))
        {
            @(string.Format("{0}, {1} {2}", address.Locality, address.Region, address.PostalCode))
        }
        else
        {
            @(string.Format("{0} {1}", address.Locality, address.PostalCode))
        }<br />
        @address.Country().Name<br />             
        
        @if (!string.IsNullOrEmpty(address.Email))
        {
         <abbr title="Email">E:</abbr> <a href="mailto:@address.Email">@address.Email</a>   
        }
                       
    </address>
}